[{"path":"https://aim-rsf.github.io/browseMetadata/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to browseMetadata","title":"Contributing to browseMetadata","text":"warmly welcome contributions browseMetadata project! document provides guidelines contributing repository.","code":""},{"path":[]},{"path":"https://aim-rsf.github.io/browseMetadata/CONTRIBUTING.html","id":"reporting-issues","dir":"","previous_headings":"How to Contribute","what":"Reporting Issues","title":"Contributing to browseMetadata","text":"Bug Reports: find bug, please open issue clear description problem steps reproduce . Feature Requests: Suggestions new features improvements always welcome. Please open issue discuss ideas.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/CONTRIBUTING.html","id":"making-changes","dir":"","previous_headings":"How to Contribute","what":"Making Changes","title":"Contributing to browseMetadata","text":"Fork Repository: Start forking repository GitHub account. Create Feature Branch: Create new branch feature fix. Make Changes: Implement changes, adhering coding standards practices outlined . Test Changes: Ensure changes break existing functionality. Submit Pull Request: Open pull request feature branch main branch original repository.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/CONTRIBUTING.html","id":"coding-standards","dir":"","previous_headings":"How to Contribute","what":"Coding Standards","title":"Contributing to browseMetadata","text":"Follow tidyverse style guide R code. Write clear, readable, maintainable code. Include comments documentation needed.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"How to Contribute","what":"Documentation","title":"Contributing to browseMetadata","text":"Update README documentation necessary. Clearly describe changes ’ve made benefits.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/CONTRIBUTING.html","id":"contributing-to-the-r-package---as-an-author-or-reviewer-of-a-pr","dir":"","previous_headings":"","what":"Contributing to the R Package - as an author or reviewer of a PR","title":"Contributing to browseMetadata","text":"contribution involves changes R package (author reviewer PR), specific guidelines, assuming using RStudio editor: Clone GitHub repository locally ensure branches need date remote. > R Studio, can clone clicking File > New Project..., select Version Control, choose Git. Enter repository URL (e.g., https://github.com/aim-rsf/browseMetadata), select directory clone repository , click Create Project. Git tab workspace. Git tab, move branch want make changes (review test changes someone else). Ensure current working directory R package directory cloned (getwd() check setwd() change). Run devtools::load_all() R console. see ℹ Loading browseMetadata returned. Test function runs running domain_mapping() R console. Make changes (review changes made others), commit changes way choose interact git locally! run issues branches seeming date R Studio workspace, consider running remove.packages(\"browseMetadata\") trying steps , case previously installed package library getting way somehow.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/CONTRIBUTING.html","id":"working-with-package-data","dir":"","previous_headings":"Contributing to the R Package - as an author or reviewer of a PR","what":"Working with Package Data","title":"Contributing to browseMetadata","text":"Creating .rda Files: create .rda files data directory package, use following command R: Replace dataname actual name data. Viewing Package Data: view data included browseMetadata package, execute: Loading Package Data: load specific data package, use: , replace dataname name data wish load.","code":"usethis::use_data(dataname) data(package='browseMetadata') data(dataname)"},{"path":"https://aim-rsf.github.io/browseMetadata/CONTRIBUTING.html","id":"building-documentation","dir":"","previous_headings":"Contributing to the R Package - as an author or reviewer of a PR","what":"Building Documentation","title":"Contributing to browseMetadata","text":"Generating Documentation Files: build documentation files package, use roxygen2 package: generate necessary documentation based roxygen comments R code.","code":"library(roxygen2) roxygenise()"},{"path":"https://aim-rsf.github.io/browseMetadata/CONTRIBUTING.html","id":"testing-your-changes","dir":"","previous_headings":"Contributing to the R Package - as an author or reviewer of a PR","what":"Testing Your Changes","title":"Contributing to browseMetadata","text":"Ensure changes break existing functionality. Run existing tests, consider adding new tests cover changes.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/CONTRIBUTING.html","id":"submitting-changes","dir":"","previous_headings":"Contributing to the R Package - as an author or reviewer of a PR","what":"Submitting Changes","title":"Contributing to browseMetadata","text":"making changes, test thoroughly. Update documentation reflect changes, applicable. Submit pull request clear description changes benefits bring package.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/CONTRIBUTING.html","id":"questions-or-need-help","dir":"","previous_headings":"","what":"Questions or Need Help?","title":"Contributing to browseMetadata","text":"questions need help, feel free open issue discussion reach maintainers directly. Thank contributing browseMetadata!","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://aim-rsf.github.io/browseMetadata/articles/browseMetadata.html","id":"what-is-metadata","dir":"Articles","previous_headings":"","what":"What is metadata?","title":"Metadata tools and resources","text":"Metadata data provides information data. Metadata useful way record relevant information datasets, help users find right data use case, understand data’s history. Metadata contain full content, like data , describes features properties data, making easier use.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/articles/browseMetadata.html","id":"getting-started-with-health-metadata","dir":"Articles","previous_headings":"","what":"Getting started with (health) metadata","title":"Metadata tools and resources","text":"many existing tools resources allow browse metadata health datasets, list :","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/articles/browseMetadata.html","id":"health-data-research-innovation-gateway-and-the-connected-metadata-catalogue","dir":"Articles","previous_headings":"Getting started with (health) metadata","what":"Health Data Research Innovation Gateway and the connected Metadata Catalogue","title":"Metadata tools and resources","text":"metadata used input R package browseMetadata. Managed Health Data Research UK collaboration UK Health Data Research Alliance. information can found Health Data Research Innovation Gateway Metadata Catalogue. Described search-engine ‘portal’ help find health datasets exist UK. datasets discoverable Gateway organisations NHS, research institutes, charities, part UK Health Data Research Alliance. related resource HDRUK Phenotype Library, described comprehensive, open access resource providing research community information, tools, phenotyping algorithms UK electronic health records. Also see Concept Library developed SAIL databank team collaborating organisations.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/articles/browseMetadata.html","id":"british-heart-foundation-data-science-centre-bhf-dsc-dashboard","dir":"Articles","previous_headings":"Getting started with (health) metadata","what":"British Heart Foundation Data Science Centre (BHF DSC) Dashboard","title":"Metadata tools and resources","text":"Offers overview interactive summaries datasets currently available CVD-COVID-UK/COVID-IMPACT within secure Trusted Research Environments (TREs) provided NHS England England, National Data Safe Haven Scotland SAIL databank Wales. dashboard allows exploration data dictionaries, data coverage, data completeness. information can found BHF DSC Dashboard.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/articles/browseMetadata.html","id":"office-for-national-statistics-ons-secure-research-service-srs-metadata-catalogue","dir":"Articles","previous_headings":"Getting started with (health) metadata","what":"Office for National Statistics (ONS) Secure Research Service (SRS) Metadata Catalogue","title":"Metadata tools and resources","text":"Metadata datasets within ONS SRS. possible filter datasets related ‘Health’ clicking tag first page. information can found ONS SRS Metadata Catalogue. tools resources . know resource offers accessible health metadata good breadth /depth coverage, please request add !","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/articles/browseMetadata.html","id":"getting-started-with-the-browsemetadata-r-package","dir":"Articles","previous_headings":"","what":"Getting started with the browseMetadata R Package","title":"Metadata tools and resources","text":"might find tools resources listed sufficient needs. , check R package! README provides installation instructions well instructions demo run (need provide data).","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/articles/browseMetadata.html","id":"what-will-this-package-generate","dir":"Articles","previous_headings":"Getting started with the browseMetadata R Package","what":"What will this package generate?","title":"Metadata tools and resources","text":"run domain_mapping function package generate log file containing: metadata dataset interest initials timestamp user created log file user’s decisions category (domain) data element (variable) belongs auto-categorised data elements commonly occur health datasets log file can compared across users. can used later analysis steps filter variables visualise map research domains.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rachael Stickland. Author, maintainer.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stickland R (2024). browseMetadata: Browses available metadata, catergorise label variable dataset. R package version 1.0.0, https://github.com/aim-rsf/browseMetadata.","code":"@Manual{,   title = {browseMetadata: Browses available metadata, to catergorise or label each variable in a dataset},   author = {Rachael Stickland},   year = {2024},   note = {R package version 1.0.0},   url = {https://github.com/aim-rsf/browseMetadata}, }"},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"browsemetadata","dir":"","previous_headings":"","what":"Browses available metadata, to catergorise or label each variable in a dataset","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"R package created help researcher browse health datasets SAIL databank. scope applied health datasets. intended useful earlier stages project. research team yet got access data can still browse metadata, address questions : ❓ datasets available? ❓ datasets need research question? ❓ variables within datasets map onto research domains interest? (e.g. socioeconomic factors, childhood adverse events, medical diagnoses, culture community) many existing tools allow browse metadata health datasets, read .","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"what-is-the-browsemetadata-package","dir":"","previous_headings":"","what":"What is the browseMetadata package?","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"R package planning tool, designed used alongside tools sources information health datasets research. many health datasets, including SAIL, metadata publicly available. R package uses Health Data Research Gateway connected Metadata Catalogue. R package takes metadata file input facilitates process browsing table within chosen dataset. user asked categorise data element (variable) within table domain related research question, categorisations get saved csv file later reference. speed process, function automatically categorises variables regularly appear health datasets (e.g. ID, Sex, Age). function also accounts data element appearing multiple tables across dataset, allows user active table copying function copies categorisations ’ve done previous tables, current table processing. 🚧 ⚠️ package early development, tested limited number metadata files. theory, package work dataset listed Health Data Research Gateway (just SAIL) long json metadata file can downloaded. practice, tested limited number metadata files SAIL databank.","code":""},{"path":[]},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"terminology","dir":"","previous_headings":"Getting started with browseMetadata","what":"Terminology","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"use Dataset (collection data, can contain multiple tables) - called Data Asset Metadata Catalogue use Table - called Data Class Metadata Catalogue use Data Element - Metadata Catalogue - refers variable name within table","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"install","dir":"","previous_headings":"Getting started with browseMetadata","what":"Install","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"Run R console:","code":"install.packages(\"devtools\") devtools::install_github(\"aim-rsf/browseMetadata\")"},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"demo-use-r-studio","dir":"","previous_headings":"Getting started with browseMetadata","what":"Demo (use R Studio)","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"Load library: Read documentation: Set working directory empty folder just created: Run function demo mode: Take note Plots tab R Studio show table domains info: [0] MATCH / UNSURE [1] METADATA [2] ID [3] DEMOGRAPHICS [4] Socioeconomic info [5] Location info [6] Education info [7] Health info Reference Plots tab throughout demo run. asked label data elements one () numbers [0-7]. simple domains [4-7] demo run. research study, domains likely much specific e.g. ‘Prenatal, antenatal, neonatal birth’ ‘Health behaviours diet’. 4 default domains always included [0-3], appended domain list given. Respond initials prompt press enter. print name dataset retrieved : Enter Y prompt read description, purpose demo. reading description dataset show: purpose demo, type 2 just process CHILD table . Leave prompt second row blank press enter. process multiple tables (e.g. CHILD, SIG_COND) include numbers multiple lines: ask want read description table: Enter Y prompt read description, purpose demo. can provide optional free text note table, saved log file. now start looping data elements. skips one means auto-categorised copied previous table already processed (later). demo, process 20 data elements (35 total). chose respond ‘7’ corresponds ‘Health info’ domain table. one domain can chosen. note can included explain categorisation made. press enter note. option re-categorisation just made, replying ‘y’ question: completing 20, ask review auto-categorisations made. auto-categorisations based mappings included data-raw/look_up.csv. look-file can changed (see section ‘Using input files’ ). ALF refers ‘Anonymous Linking Field’ - field used within datasets anonymised encrypted inclusion within SAIL Databank. Press enter now. ask want review categorisations made. Respond Y review: want change categorisation, enter row number (e.g. 8 BIRTH_TM 14 CURR_LHB_CD_BIRTH). take process , can -write previous categorisation. finished! Take look outputs: OUTPUT csv contains categorisations made. LOG csv contains information session whole, including various metadata. two csv files contain timestamp column. like formatting OUTPUT csv, see function R/convert_output.R alternative. PLOT png file saves simple plot displaying count domain codes table.","code":"library(browseMetadata) ?domain_mapping setwd(\"/Users/your-username/test-browseMetadata\") domain_mapping() ℹ Running domain_mapping in demo mode using package data files ℹ Using the default look-up table in data/look-up.rda  Enter your initials: RS ── Dataset Name ────────────────────────────────────────────────────────────────────────────────────────────────────── National Community Child Health Database (NCCHD)  ── Dataset Last Updated ────────────────────────────────────────────────────────────────────────────────────────────── 2024-03-14T17:40:57.463Z  ── Dataset File Exported By ────────────────────────────────────────────────────────────────────────────────────────── Rachael Stickland at 2024-04-05T13:01:23.109Z  Would you like to read a description of the dataset? (y/n): y ℹ Found 13 Tables in this Dataset  1 EXAM  2 CHILD  3 REFR_IMM_VAC  4 IMM  5 BREAST_FEEDING  6 PATH_BLOOD_TESTS  7 CHE_HEALTHYCHILDWALESPROGRAMME  8 BLOOD_TEST  9 CHILD_TRUST  10 PATH_SPCM_DETAIL  11 CHILD_MEASUREMENT_PROGRAM  12 CHILD_BIRTHS  13 SIG_COND  ℹ Enter each table number you want to process in this interactive session.  1: 2 2: ℹ Enter each table number you want to process in this interactive session.  1: 1 2: 13 3: ℹ Processing Table 2 of 13  ── Table Name ──────────────────────────────────────────────────────────────────────────────────────────────────────── CHILD  ── Table Last Updated ──────────────────────────────────────────────────────────────────────────────────────────────── 2024-03-14T17:40:46.509Z  Would you like to read a description of the table? (y/n): y ℹ 20 left to process in this session ✔ Processing data element 1 of 35  ℹ 19 left to process in this session ✔ Processing data element 2 of 35  ℹ 18 left to process in this session ✔ Processing data element 3 of 35  ℹ 17 left to process in this session ✔ Processing data element 4 of 35  DATA ELEMENT ----->  APGAR_1  DESCRIPTION ----->  APGAR 1 score. This is a measure of a baby's physical state at birth with particular reference to asphyxia - taken at 1 minute. Scores 3 and below are generally regarded as critically low; 4-6 fairly low, and 7-10 generally normal. Field can contain high amount of unknowns/non-entries.  DATA TYPE ----->  CHARACTER  Categorise data element into domain(s). E.g. 3 or 3,4: 7  Categorisation note (or press enter to continue): your note here Response to be saved is '7'. Would you like to re-do? (y/n): y ! Please check the auto categorised data elements are accurate for table CHILD:       DataElement    Domain_code  Note 1    ALF_E          2            AUTO CATEGORISED 2    ALF_MTCH_PCT   2            AUTO CATEGORISED 3    ALF_STS_CD     2            AUTO CATEGORISED 6    AVAIL_FROM_DT  1            AUTO CATEGORISED 19   GNDR_CD        3            AUTO CATEGORISED  ℹ Press enter to accept the auto categorisations for table CHILD or enter each row you'd like to edit:  1: Would you like to review your categorisations? (y/n): y        DataElement             Domain_code   Note (first 12 chars) 4     APGAR_1                 7 5     APGAR_2                 7 7     BIRTH_ORDER             7             10% missingness 8     BIRTH_TM                1,7           20% missingness 9     BIRTH_WEIGHT            7 10    BIRTH_WEIGHT_DEC        7 11    BREASTFEED_8_WKS_FLG    7 12    BREASTFEED_BIRTH_FLG    7 13    CHILD_ID_E              2 14    CURR_LHB_CD_BIRTH       5,7           Place of birth 15    DEL_CD                  7 16    DOD                     3,7 17    ETHNIC_GRP_CD           3 18    GEST_AGE                3,7 20    HEALTH_VISITOR_CD_E     2  ℹ Press enter to accept your categorisations for table CHILD, or enter each row number you'd like to edit:  1: 8 2: 14 3: ✔ Your final categorisations have been saved: OUTPUT_NationalCommunityChildHealthDatabase(NCCHD)_CHILD_2024-04-05-14-37-36.csv ✔ Your session log has been saved: LOG_NationalCommunityChildHealthDatabase(NCCHD)_CHILD_2024-04-05-14-37-36.csv ✔ A summary plot has been saved: PLOT_NationalCommunityChildHealthDatabase(NCCHD)_CHILD_2024-04-05-14-37-36.png"},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"using-your-own-input-files","dir":"","previous_headings":"Getting started with browseMetadata","what":"Using your own input files","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"code early development. see known bugs sub-optimal features refer Issues. First, change json file domain file inputs. Later, consider changing 3 inputs, depending use-case. example: Unlike demo mode, ask specify range variables want process (start variable:end variable), can choose process table across multiple sessions (particularly useful table large number data elements).","code":"domain_mapping(json_file, domain_file, look_up_file, output_dir, table_copy) domain_mapping(json_file = 'path/your-json.json', domain_file = 'path/your-domains.csv')"},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"json-file","dir":"","previous_headings":"Getting started with browseMetadata > Using your own input files","what":"json file:","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"contains metadata datasets interest downloaded metadata catalogue see data-raw/national_community_child_health_database_(ncchd)_20240405T130125.json example download","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"domain_file","dir":"","previous_headings":"Getting started with browseMetadata > Using your own input files","what":"domain_file:","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"csv file created user, domain listed separate line, header see data-raw/domain_list_demo.csv template first 4 domains auto populated (see demo )","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"lookup-file","dir":"","previous_headings":"Getting started with browseMetadata > Using your own input files","what":"lookup file:","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"default lookup file used domain_mapping function optional: csv can created user (using format default) provided input lookup file makes auto-categorisations intended variables come regularly health datasets (e.g. IDs demographics) lookup file works 1:1 mappings right now, .e. DataElement listed lookup file","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"output-dir","dir":"","previous_headings":"Getting started with browseMetadata > Using your own input files","what":"output dir:","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"path directory two csv output files saved. default, current working directory used","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"table_copy","dir":"","previous_headings":"Getting started with browseMetadata > Using your own input files","what":"table_copy:","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"default TRUE, set FALSE want deactivate table copying table copying means categorisations made previous tables carried table, long csv files share output_dir can useful data elements (variables) appear across multiple tables within one dataset copying one table next save user time, ensure consistency categorisations across tables ‘Note’ column output csv file indicate categorisation copied typical session look like : Run 1, select table ‘CHILD’ Run 2, select table ‘CHILD_BIRTHS’ (function notices already run table ‘CHILD’) Run 3, select table ‘PATH_BLOOD_TESTS’ (function notices already run table ‘CHILD’ ‘CHILD_BIRTHS’) … run process table potential shorter user complete data elements appear across tables, user asked categorise twice.","code":"ℹ Processing Table 6 of 13  ── Table Name ──  CHILD  ── Table Last Updated ──  [datetime] ℹ Processing Table 7 of 13  ── Table Name ──  CHILD_BIRTHS  ── Table Last Updated ──  [datetime] ... ℹ Copying from previous session(s):  [1] \"OUTPUT_NationalCommunityChildHealthDatabase(NCCHD)_CHILD_[datetime].csv\" ℹ Processing Table 8 of 13  ── Table Name ──  PATH_BLOOD_TESTS  ── Table Last Updated ──  [datetime] ... ℹ Copying from previous session(s):  [1] \"OUTPUT_NationalCommunityChildHealthDatabase(NCCHD)_CHILD_[datetime].csv\" [2] \"OUTPUT_NationalCommunityChildHealthDatabase(NCCHD)_CHILD_BIRTHS_[datetime].csv\""},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"potential-use-cases-for-the-output-files","dir":"","previous_headings":"Getting started with browseMetadata","what":"Potential use-cases for the output files","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"csv output file containing categorisation data element used input later analysis steps filter variables visualise variable maps research domains interest. Categorisations across researchers can compared using function R/compare_sessions.R. Type ?compare_sessions read manual run function. brief, compares csv outputs two sessions, finds differences, asks consensus.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"project licensed GNU General Public License v3.0 - see LICENSE file details. GNU General Public License free, copyleft license software kinds works. information, please refer https://www.gnu.org/licenses/gpl-3.0.en.html.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"cite package ‘browseMetadata’ publications use: Stickland R (2024). browseMetadata: Browses available metadata, catergorise/label variable dataset. R package version 1.0.0 BibTeX entry LaTeX users ","code":"@Manual{,     title = {browseMetadata: Browses available metadata, to catergorise/label each variable in a dataset},     author = {Rachael Stickland},     year = {2024},     note = {R package version 1.0.0},     doi = {https://doi.org/10.5281/zenodo.10581500},   }"},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"warmly welcome contributions browseMetadata project. Whether ’s fixing bugs, adding new features, improving documentation, welcome involvement. Report Issues: find bug feature request, please report via GitHub Issues. Submit Pull Requests: welcome pull requests. Please read Contribution Guidelines make contributions. Feedback Suggestions: ’re always looking improve, value feedback suggestions. Feel free open issue share thoughts. information contribute, please refer Contribution Guidelines.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"contributors-","dir":"","previous_headings":"Contributing","what":"Contributors ✨","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"project follows -contributors specification, using (emoji key). Contributions kind welcome!","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/index.html","id":"acknowledgements-","dir":"","previous_headings":"Contributing","what":"Acknowledgements ✨","title":"Browses available metadata, to catergorise or label each variable in a dataset","text":"Thank multiple members MELD-B research project SAIL Databank team providing use-cases meta data browsing, ideas feedback. Thank Health Data Research Innovation Gateway hosting openly available metadata health datasets, data providers included datasets gateway.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/browseMetadata-package.html","id":null,"dir":"Reference","previous_headings":"","what":"browseMetadata — browseMetadata-package","title":"browseMetadata — browseMetadata-package","text":"Browses available metadata, catergorise/label data element within dataset.","code":""},{"path":[]},{"path":"https://aim-rsf.github.io/browseMetadata/reference/browseMetadata-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"browseMetadata — browseMetadata-package","text":"Maintainer: Rachael Stickland rstickland@turing.ac.uk (ORCID)","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/compare_sessions.html","id":null,"dir":"Reference","previous_headings":"","what":"compare_sessions — compare_sessions","title":"compare_sessions — compare_sessions","text":"function used running domain_mapping function.  compares csv outputs two sessions, finds differences, asks consensus.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/compare_sessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compare_sessions — compare_sessions","text":"","code":"compare_sessions(   session_dir,   session1_base,   session2_base,   json_file,   domain_file )"},{"path":"https://aim-rsf.github.io/browseMetadata/reference/compare_sessions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compare_sessions — compare_sessions","text":"session_dir directory contain 2 csv files session (LOG_ OUTPUT_), 4 csv files total. session1_base Base file name session 1 e.g. 'NationalCommunityChildHealthDatabase(NCCHD)_BLOOD_TEST_2024-07-05-16-07-38' session2_base Base file name session 1 e.g. 'NationalCommunityChildHealthDatabase(NCCHD)_BLOOD_TEST_2024-07-08-12-03-30' json_file full path metadata file used running domain_mapping (session 1 session 2) domain_file full path domain file used running domain_mapping (session 1 session 2)","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/compare_sessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compare_sessions — compare_sessions","text":"returns csv output, represents consensus decisions session 1 session 2","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/convert_output.html","id":null,"dir":"Reference","previous_headings":"","what":"convert_output — convert_output","title":"convert_output — convert_output","text":"'OUTPUT_' file groups multiple categorisations onto one line e.g. '1,3'  function creates new longer output 'L-OUTPUT_' gives categorisation row  'L-OUTPUT_' may useful using csv files later analyses","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/convert_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert_output — convert_output","text":"","code":"convert_output(output_csv, output_dir)"},{"path":"https://aim-rsf.github.io/browseMetadata/reference/convert_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert_output — convert_output","text":"output_csv name 'OUTPUT_' csv file created domain_mapping.R output_dir location output_csv","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/convert_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert_output — convert_output","text":"function return 'L-OUTPUT_' output_dir","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/domain_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List of domains — domain_list","title":"List of domains — domain_list","text":"simplified list domains, demo function domain_mapping.R  data created two steps: domain_list <- read.csv('browseMetadata/data-raw/domain_list_demo.csv',header=FALSE) usethis::use_data(domain_list)","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/domain_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of domains — domain_list","text":"","code":"data(domain_list)"},{"path":"https://aim-rsf.github.io/browseMetadata/reference/domain_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of domains — domain_list","text":"data frame 5 rows 1 column","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/domain_list.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"List of domains — domain_list","text":"csv manually created","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/domain_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"domain_mapping — domain_mapping","title":"domain_mapping — domain_mapping","text":"function read metadata file chosen dataset, loop data elements, ask user catergorise/label data element belonging one domains. domains appear Plots tab dataset information printed R console, user's reference making categorisations.  categorisations saved csv file, alongside log file summarises session details. speed process, auto-categorisations made function commonly occurring data elements categorisations data element can copied one table another.  Example inputs provided within package data, user run function demo mode.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/domain_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"domain_mapping — domain_mapping","text":"","code":"domain_mapping(   json_file = NULL,   domain_file = NULL,   look_up_file = NULL,   output_dir = NULL,   table_copy = TRUE )"},{"path":"https://aim-rsf.github.io/browseMetadata/reference/domain_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"domain_mapping — domain_mapping","text":"json_file metadata file. downloaded metadata catalogue json file. See 'data-raw/maternity_indicators_dataset_(mids)_20240105T132210.json' example download. domain_file domain list file. csv file created user, domain listed separate line. See 'data-raw/domain_list_demo.csv' template. look_up_file look-table file, auto-categorisations. default, code uses 'data/look-.rda'. user can provide look-table format 'data-raw/look-.csv'. output_dir path directory two csv output files saved. default, current working directory used. table_copy Turn copying tables (TRUE FALSE, default TRUE). TRUE, categorisations made tables dataset copied ('OUTPUT_' files found output_dir).","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/domain_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"domain_mapping — domain_mapping","text":"function return two csv files: 'OUTPUT_' contains mappings 'LOG_' contains details dataset session.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/domain_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"domain_mapping — domain_mapping","text":"","code":"# Run in demo mode by providing no inputs: domain_mapping() # Demo mode will use the /data files provided in this package # For more guidance, refer to the package README.md file and the R manual files."},{"path":"https://aim-rsf.github.io/browseMetadata/reference/json_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Json metadata file — json_metadata","title":"Json metadata file — json_metadata","text":"Example metadata health dataset, demo function domain_mapping.R  data created five steps: Go https://modelcatalogue.cs.ox.ac.uk/hdruk_live/#/catalogue/dataModel/16920b16-e24c-49f9-b4df-3dc85779822b/dataClasses Download json metadata file selecting 'Export JSON' option download button install.packages(\"rjson\") json_metadata <- rjson::fromJSON(file = '/browseMetadata/data-raw/national_community_child_health_database_(ncchd)_20240405T130125.json') usethis::use_data(json_metadata)","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/json_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Json metadata file — json_metadata","text":"","code":"data(json_metadata)"},{"path":"https://aim-rsf.github.io/browseMetadata/reference/json_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Json metadata file — json_metadata","text":"Nested lists","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/json_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Json metadata file — json_metadata","text":"https://modelcatalogue.cs.ox.ac.uk/hdruk_live/#/catalogue/dataModel/16920b16-e24c-49f9-b4df-3dc85779822b/dataClasses","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/look_up.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto-categorisations — look_up","title":"Auto-categorisations — look_up","text":"list pre-defined pairings data element domain code.  data element domain_mapping.R processes:  contained within look-table, uses auto-categorised domain code rather asking user categorise. data created two steps: look_up <- read.csv('browseMetadata/data-raw/look_up.csv') usethis::use_data(look_up)","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/look_up.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto-categorisations — look_up","text":"","code":"data(look_up)"},{"path":"https://aim-rsf.github.io/browseMetadata/reference/look_up.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Auto-categorisations — look_up","text":"data frame variable number rows 3 columns","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/look_up.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Auto-categorisations — look_up","text":"csv manually created","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/user_categorisation.html","id":null,"dir":"Reference","previous_headings":"","what":"user_categorisation — user_categorisation","title":"user_categorisation — user_categorisation","text":"function used within domain_mapping function.  displays data properties user requests categorisation domain.  optional note can included categorisation.","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/user_categorisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"user_categorisation — user_categorisation","text":"","code":"user_categorisation(data_element, data_desc, data_type, domain_code_max)"},{"path":"https://aim-rsf.github.io/browseMetadata/reference/user_categorisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"user_categorisation — user_categorisation","text":"data_element Name variable data_desc Description variable data_type Data type variable domain_code_max Max code domain list (0-3 auto included, N included via domain_file)","code":""},{"path":"https://aim-rsf.github.io/browseMetadata/reference/user_categorisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"user_categorisation — user_categorisation","text":"returns list containing decision decision note","code":""}]
